###--- Natalie's Python Pipeline for Processing RAD data ---###
# Pacific Cod Time Series Project #

### WHEN RUNNING THIS SCRIPT, YOUR INPUTS AT THE COMMAND LINE ARE:
# python  
# {0}[name of script file]
# {1}[number of files you'll be running through process_radtags]
# {}[]
# {}[]

### DEPENDENCES
# [1] You want the following # and names of directories



# call necessary modules
import sys
import subprocess

# --- (A) make necessary directories for whole project, using a shell script

# name your directories
dir1 = "post-fastqc"
dir2 = "post-ustacks"
dir3 = "post-cstacks"
dir4 = "post-stacks"
dir5 = "post-re-cstacks"
dir6 = "post-extra-filtering"
dir7 = "final-files"
dirlist = [dir1, dir2, dir3, dir4, dir5, dir6, dir7] # make into list

# open text file for shell script, make string that will be written to the file
newfile = open("make_proj_dirs.txt", "w")
str_for_file = ""

for i in range(0, len(dirlist)):
	dirname = dirlist[i]
	tempstr = "mkdir " + dirname + "\n"
	str_for_file += tempstr

newfile.write(str_for_file) # write string to file
newfile.close() # close file

# run shell script to make directories	
subprocess.call(['sh make_proj_dirs.txt'], shell=True)

# --- (B) process_radtags

prt_file = open("process_radtags.txt", "w")
str_for_prt_file = ""

for i in 





# newfile = open("ustacks_shell.txt", "w")	 # make ustacks shell script to run through terminal
# myfile = open("new_filenames1.txt", "r")	#open the file with a list of barcodes + sample IDs
# 
# newfile.write('cd /users/natalielowell/Git-repos/FISH546/Cod-Time-Series-Project/Data/' + '\n')
# ID_int = 001								# start integer counter
# for line in myfile: 			#for each line in the barcode file	
# 	linelist=line.strip().split()	
# 	sampID = linelist[2] 					#save the second object as "sampID"
# 	if ID_int < 10: 
# 		ustacks_code = "ustacks -t gzfastq -f " + dirfrom + "/" + sampID + " -r -d -o " + dirto + " -i 00" + str(ID_int) + " -m 5 -M 3 -p 10" + "\n"
# 								#create a line of code for ustacks that includes the new sample ID (with 2 leading 0s)
# 	elif ID_int >= 10 & ID_int < 100: 
# 		ustacks_code = "ustacks -t gzfastq -f " + dirfrom + "/" + sampID + " -r -d -o " + dirto + " -i 0" + str(ID_int) + " -m 5 -M 3 -p 10" + "\n"
# 								#create a line of code for ustacks that includes the new sample ID (with 1 leading 0)
# 	else: 
# 		ustacks_code = "ustacks -t gzfastq -f " + dirfrom + "/" + sampID + " -r -d -o " + dirto + " -i " + str(ID_int) + " -m 5 -M 3 -p 10" + "\n"
# 								#create a line of code for ustacks that includes the new sample ID (with no leading 0s)
# 	newfile.write(ustacks_code)	#append this new line of code to the output file
# 	ID_int += 1



process_radtags -p /mnt/hgfs/Shared Drive D/Pacific cod/DataAnalysis/raw_data/L1_PE150/ -P -i gzfastq -y gzfasta -o /mnt/hgfs/Shared Drive D/Pacific cod/DataAnalysis/samplesT142 -b /mnt/hgfs/Shared Drive D/Pacific cod/DataAnalysis/barcodesL1.txt -e sbfI -E phred33 -r -c -q -t 146